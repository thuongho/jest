Hooks and Context Intro

100 Intro to Hooks
hooks introduced with React 16.8.0 and above

at the time of this course, Enzyme hooks support is not mature

allow state and lifecycle events in functional components
easier to reuse code amont components

101 Intro to Context
stable release in 16.3

Context is used for
- Global settings (language, visual theme)
- the components need access to global settings
- deeply nested components that needs access but ancestors don't

Language context
- components need access to language to know what language to display

Jotto-specific state
- whether the word has been guessed successfully

Using a Context
- components that use a context need to be wrapped in a provider
- the context value is passed to the provider as a prop
- whenever the value changes, the provider will update children so that the children can re-render
- value can be local state for parent component
- or it can be pattern to embed state into context (custom hook)

102 Setting up Jotto for Hooks and Context

103 Jotto Data Flow with Hooks and Context

App
- local state
-- secretWord
-- language

LanguageProvider
LanguagePicker component
- setLanguage prop
- language context (get)
- pass language state to LanguagePicker as a prop

SuccessProvider
Congrats component
language context (get)
- so it knows what to display
success context (get)
- display success message or not

GuessedWordsProvider
- nested within the SuccessProvider
Input
- secretWord prop
- success context (get/set)
- language context (get)
- currentGuess state
- guessedWords context (get/set)
GuessedWords
- language context (get)
- guessedWords context (get)

104 Jotto Hooks and Context Plan of Attack
Create simple App and Input components
setState hook
- State controlled field in Input (currentGuess)
useEffect hook
- getSecretWord on App mount from random word server
Context using value prop
- language context (using App-level state)
Context with embedded state
- embeds the state into the provider
- success
- GuessedWords

105 Basic App Component
App.test
- shallow
findByTestAttr
Setup function for app component.
@returns {ShallowWrapper}
setup
- return shallow 
App renders without error
find component-app

106 Code Quiz! Basic Input Component
Create input.js and test
functional component with return value
- empty div with data-test attribute

107 Input Props
props arg 
- destructure secretWord
- not do anything with the secret word yet, just testing prop with correct type
define proptypes for Input component
after requiring props, render test will throw a warning
update shallow arg to pass a prop for secretWord
use checkProps from testUtils

108 Jest Mocks
what is mock function
- fake function that runs a fake function instead of real function
- can run alt code or just act as a placeholder

Jest replaces real function with mock

Can assert 
- how many time smock ran during tests
- with what arguments

Redux spied on mock functions
here well sometimes make replacement functions
- replacement functions will return values

mocks serve 3 purposes
- keep real function from running
-- prevents side-effects like network calls
- spy on function to see when it's called
-- when it called and what arguments
- provide return values
-- set up test conditions

Warning for mocks in Jest
reset properties on modules to replace functions with mocks

no destructuring on imports in non-test code

this works
import React 
const language - React.useContext(LanguageContext)

doesn't work
import {useContext}
const language - useContext(LanguageContext)
